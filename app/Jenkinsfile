pipeline {
  agent {
    docker {
      image 'amioranza/maven:3-alpine'
      args '-v /var/jenkins_home/.m2:/root/.m2'
    }
  }

  options {
    gitLabConnection('gitlab')
  }
  triggers {
      gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All')
  }
  
  stages {

    stage('Checkout') {
      steps{
        checkout scm
      }
    }

    stage('Test') {
      steps{
        sh "mvn -Drevision=${BUILD_NUMBER} install test"
      }
    }

    stage('Build') {
      steps {
        sh "mvn -Drevision=${BUILD_NUMBER} -DskipTests=true clean"
      }
    }

    stage('Deploy'){
      steps{
//         sh "mvn deploy -Drevision=${BUILD_NUMBER} -DskipTests -Dmaven.install.skip=true -s /var/jenkins_home/.m2/settings.xml"
        sh "ls -l target"
        sh "cp deploy/Dockerfile ."
        sh "sed -i 's/__JAR__/spring-boot-example-0.0.${BUILD_NUMBER}-SNAPSHOT.jar/g' Dockerfile"
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
            def app = docker.build("${REPO}/${APP}:${TAG}", '.')
            app.push()
            app.push('latest')
          }
        }
      }
    }

    // stage('Package and Push') {
    //   steps{
    //     sh "ls -l"
    //     sh "cp deploy/Dockerfile ."
    //     sh "sed -i 's/__JAR__/${env.APP}/g' Dockerfile"
    //     // sh "docker build -t ${REPO}/${env.APP}:${env.TAG} ."
    //     script{
    //       docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
    //         def app = docker.build("${REPO}/${APP}:${TAG}", '.')
    //         app.push()
    //         app.push('latest')
    //       }
    //     }
    //   }
    // }

    // stage('Invoke CD') {
    //   steps {
    //     build job: 'cd', propagate: false, parameters: [
    //     string(name: 'REPO', value: "amioranza"),
    //     string(name: 'APP', value: "spring-boot-example"),
    //     string(name: 'TAG', value: "${BUILD_NUMBER}")
    //     ]
    //   }
    // }

  }
}